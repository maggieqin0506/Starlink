{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maggie/Documents/Projects/Starlink/starlink/src/components/SatSetting.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, InputNumber } from 'antd';\n\nclass SatSettingForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showSatellite = e => {\n      // 阻止默认事件：阻止自动发送表单\n      e.preventDefault(); // get all values 跟一个回调函数\n      // err - see if there's any error\n      // values - 表单数据\n\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          // console.log('Received values of form: ', values);\n          this.props.onShow(values);\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form; // form format\n\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 11\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      }\n    };\n    return (\n      /*#__PURE__*/\n      // pass the layout to the form, so the form can look for the key and value\n      _jsxDEV(Form, { ...formItemLayout,\n        className: \"sat-setting\",\n        onSubmit: this.showSatellite,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Longitude(degrees)\",\n          children: // 校验规则\n          // define the key\n          getFieldDecorator(\"longitude\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Longitude\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: -180,\n            max: 180,\n            style: {\n              width: \"100%\"\n            },\n            placeholder: \"Please input Longitude\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Latitude(degrees)\",\n          children: getFieldDecorator(\"latitude\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Latitude\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Please input Latitude\",\n            min: -90,\n            max: 90,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Elevation(meters)\",\n          children: getFieldDecorator(\"elevation\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Elevation\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Please input Elevation\",\n            min: -413,\n            max: 8850,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Altitude(degrees)\",\n          children: getFieldDecorator(\"altitude\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Altitude\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Please input Altitude\",\n            min: 0,\n            max: 90,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Duration(secs)\",\n          children: getFieldDecorator(\"duration\", {\n            rules: [{\n              required: true,\n              message: \"Please input your Duration\"\n            }]\n          })( /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Please input Duration\",\n            min: 0,\n            max: 90,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"show-nearby\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Find Nearby Satellite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n} // Form.create() - returns a function, which is a HOC\n// the function takes the parameter (SatSettingForm)\n\n\nconst SatSetting = Form.create({\n  name: 'satellite-setting'\n})(SatSettingForm);\nexport default SatSetting;","map":{"version":3,"sources":["/Users/maggie/Documents/Projects/Starlink/starlink/src/components/SatSetting.js"],"names":["React","Component","Form","Button","InputNumber","SatSettingForm","showSatellite","e","preventDefault","props","form","validateFields","err","values","onShow","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","rules","required","message","width","textAlign","SatSetting","create","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Button, InputNumber} from 'antd';\n\nclass SatSettingForm extends Component {\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        // form format\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 11 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 13 },\n            },\n        };\n        return (\n            // pass the layout to the form, so the form can look for the key and value\n            <Form {...formItemLayout} className=\"sat-setting\" onSubmit={this.showSatellite}>\n                <Form.Item label=\"Longitude(degrees)\">\n                    {\n                        // 校验规则\n                        // define the key\n                        getFieldDecorator(\"longitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Longitude\",\n                                }\n                            ],\n                        })(<InputNumber min={-180} max={180}\n                                        style={{width: \"100%\"}}\n                                        placeholder=\"Please input Longitude\"\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Latitude(degrees)\">\n                    {\n                        getFieldDecorator(\"latitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Latitude\",\n                                }\n                            ],\n                        })(<InputNumber placeholder=\"Please input Latitude\"\n                                        min={-90} max={90}\n                                        style={{width: \"100%\"}}\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Elevation(meters)\">\n                    {\n                        getFieldDecorator(\"elevation\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Elevation\",\n                                }\n                            ],\n                        })(<InputNumber placeholder=\"Please input Elevation\"\n                                        min={-413} max={8850}\n                                        style={{width: \"100%\"}}\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Altitude(degrees)\">\n                    {\n                        getFieldDecorator(\"altitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Altitude\",\n                                }\n                            ],\n                        })(<InputNumber placeholder=\"Please input Altitude\"\n                                        min={0} max={90}\n                                        style={{width: \"100%\"}}\n                        /> )\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Duration(secs)\">\n                    {\n                        getFieldDecorator(\"duration\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Duration\",\n                                }\n                            ],\n                        })(<InputNumber placeholder=\"Please input Duration\" min={0} max={90} style={{width: \"100%\"}} />)\n                    }\n                </Form.Item>\n                <Form.Item className=\"show-nearby\">\n                    <Button type=\"primary\" htmlType=\"submit\" style={{textAlign: \"center\"}}>\n                        Find Nearby Satellite\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n\n    showSatellite = e => {\n        // 阻止默认事件：阻止自动发送表单\n        e.preventDefault();\n        // get all values 跟一个回调函数\n        // err - see if there's any error\n        // values - 表单数据\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                this.props.onShow(values);\n            }\n        });\n    }\n}\n\n// Form.create() - returns a function, which is a HOC\n// the function takes the parameter (SatSettingForm)\n\nconst SatSetting = Form.create({name: 'satellite-setting'})(SatSettingForm)\n\nexport default SatSetting;"]},"metadata":{},"sourceType":"module"}