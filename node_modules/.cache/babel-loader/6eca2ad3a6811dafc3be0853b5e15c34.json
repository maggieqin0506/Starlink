{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/maggie/Documents/Projects/Starlink/src/components/SatelliteList.js\";\n// import React, {Component} from 'react';\n// import {List, Avatar, Button, Checkbox, Spin} from 'antd';\n// import satellite from \"../assets/images/satellite.svg\";\n//\n// class SatelliteList extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             selected: [],\n//             isLoad: false\n//         };\n//     }\n//\n//     onChange = e => {\n//         // step 1: get current selected satellite info\n//         // 解构， data info , current state(选中还是删除)\n//         const {dataInfo, checked} = e.target;\n//         const {selected} = this.state;\n//         // step 2: add or remove current selected sarellite to the array\n//         const list = this.addOrRemove(dataInfo, checked, selected);\n//         // step 3: update the selected state since we need to pass the data to the main\n//         this.setState({selected: list})\n//     }\n//\n//\n//     addOrRemove = (item, status, list) => {\n//         const found = list.some(entry => entry.satid === item.satid);\n//         // case 1: check is true\n//         //      -> item not in the list => ADD THE ITEM\n//         //      -> item in the list => DO NOTHING\n//         if (status && !found) {\n//             list.push(item)\n//         }\n//\n//         // case 2: check is false\n//         //      -> item in the list => REMOVE THE ITEM\n//         //      -> item not in the list => DO NOTHING\n//         if (!status && found) {\n//             list = list.filter(entry => {\n//                 return entry.satid !== item.satid;\n//             });\n//         }\n//         return list;\n//     }\n//     onShowSatMap = () => {\n//         this.props.onShowMap(this.state.selected);\n//     }\n//\n//     render() {\n//         // check if the list is empty or not\n//         const satList = this.props.satInfo ? this.props.satInfo.above : [];\n//         const {isLoad} = this.props;\n//         const {selected} = this.state;\n//\n//         return (\n//             <div className=\"sat-list-box\">\n//                 <Button className=\"sat-list-btn\"\n//                         size=\"large\"\n//                         disabled={selected.length === 0}\n//                         onClick={this.onShowSatMap}\n//                 >Track on the map</Button>\n//                 <hr/>\n//\n//                 {\n//                     isLoad ? // spin the box when we are fetching the data\n//                         <div className=\"spin-box\">\n//                             <Spin tip=\"Loading...\" size=\"large\"/>\n//                         </div>\n//                         :\n//                         <List\n//                             className=\"sat-list\"\n//                             itemLayout=\"horizontal\"\n//                             size=\"small\"\n//                             dataSource={satList} // our own data source\n//                             renderItem={item => ( // call back function\n//                                 // list's each option\n//                                 <List.Item\n//                                     // 对于item的操作\n//                                     actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}\n//                                 >\n//\n//                                     <List.Item.Meta // use the  satellite.svg logo\n//                                         avatar={<Avatar size={50} src={satellite}/>}\n//                                         title={<p>{item.satname}</p>}\n//                                         description={`Launch Date: ${item.launchDate}`}\n//                                     />\n//\n//                                 </List.Item>\n//                             )}\n//                         />\n//                 }\n//             </div>\n//         );\n//     }\n// }\n//\n// export default SatelliteList;\nimport React, { Component } from 'react';\nimport { Button, Spin, List, Avatar, Checkbox } from 'antd';\nimport satellite from \"../assets/images/satellite.svg\";\n\nclass SatelliteList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: []\n    };\n\n    this.showMap = () => {\n      const {\n        selected\n      } = this.state;\n      this.props.onShowMap(selected);\n    };\n\n    this.onChange = e => {\n      const {\n        dataInfo,\n        checked\n      } = e.target;\n      const {\n        selected\n      } = this.state;\n      const list = this.addOrRemove(dataInfo, checked, selected);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.addOrRemove = (item, status, list) => {\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => entry.satid !== item.satid);\n      }\n\n      return list;\n    };\n  }\n\n  render() {\n    const {\n      selected\n    } = this.state;\n    const {\n      satInfo,\n      isLoad\n    } = this.props;\n    const satList = satInfo ? satInfo.above : [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sat-list-box\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"sat-list-btn\",\n        size: \"large\",\n        disabled: selected.length === 0,\n        onClick: this.showMap,\n        children: \"Track on the map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), isLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-box\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading...\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        className: \"sat-list\",\n        itemLayout: \"horizontal\",\n        dataSource: satList,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            dataInfo: item,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 56\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: satellite,\n              size: \"large\",\n              alt: \"satellite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 51\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.satname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 50\n            }, this),\n            description: `Launch Date: ${item.launchDate}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.satInfo !== this.props.satInfo) {\n      this.setState({\n        selected: []\n      });\n    }\n  }\n\n}\n\nexport default SatelliteList;","map":{"version":3,"sources":["/Users/maggie/Documents/Projects/Starlink/src/components/SatelliteList.js"],"names":["React","Component","Button","Spin","List","Avatar","Checkbox","SatelliteList","state","selected","showMap","props","onShowMap","onChange","e","dataInfo","checked","target","list","addOrRemove","setState","item","status","found","some","entry","satid","push","filter","render","satInfo","isLoad","satList","above","length","satellite","satname","launchDate","componentDidUpdate","prevProps","prevState","snapshot"],"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","sourcesContent":["// import React, {Component} from 'react';\n// import {List, Avatar, Button, Checkbox, Spin} from 'antd';\n// import satellite from \"../assets/images/satellite.svg\";\n//\n// class SatelliteList extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             selected: [],\n//             isLoad: false\n//         };\n//     }\n//\n//     onChange = e => {\n//         // step 1: get current selected satellite info\n//         // 解构， data info , current state(选中还是删除)\n//         const {dataInfo, checked} = e.target;\n//         const {selected} = this.state;\n//         // step 2: add or remove current selected sarellite to the array\n//         const list = this.addOrRemove(dataInfo, checked, selected);\n//         // step 3: update the selected state since we need to pass the data to the main\n//         this.setState({selected: list})\n//     }\n//\n//\n//     addOrRemove = (item, status, list) => {\n//         const found = list.some(entry => entry.satid === item.satid);\n//         // case 1: check is true\n//         //      -> item not in the list => ADD THE ITEM\n//         //      -> item in the list => DO NOTHING\n//         if (status && !found) {\n//             list.push(item)\n//         }\n//\n//         // case 2: check is false\n//         //      -> item in the list => REMOVE THE ITEM\n//         //      -> item not in the list => DO NOTHING\n//         if (!status && found) {\n//             list = list.filter(entry => {\n//                 return entry.satid !== item.satid;\n//             });\n//         }\n//         return list;\n//     }\n//     onShowSatMap = () => {\n//         this.props.onShowMap(this.state.selected);\n//     }\n//\n//     render() {\n//         // check if the list is empty or not\n//         const satList = this.props.satInfo ? this.props.satInfo.above : [];\n//         const {isLoad} = this.props;\n//         const {selected} = this.state;\n//\n//         return (\n//             <div className=\"sat-list-box\">\n//                 <Button className=\"sat-list-btn\"\n//                         size=\"large\"\n//                         disabled={selected.length === 0}\n//                         onClick={this.onShowSatMap}\n//                 >Track on the map</Button>\n//                 <hr/>\n//\n//                 {\n//                     isLoad ? // spin the box when we are fetching the data\n//                         <div className=\"spin-box\">\n//                             <Spin tip=\"Loading...\" size=\"large\"/>\n//                         </div>\n//                         :\n//                         <List\n//                             className=\"sat-list\"\n//                             itemLayout=\"horizontal\"\n//                             size=\"small\"\n//                             dataSource={satList} // our own data source\n//                             renderItem={item => ( // call back function\n//                                 // list's each option\n//                                 <List.Item\n//                                     // 对于item的操作\n//                                     actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}\n//                                 >\n//\n//                                     <List.Item.Meta // use the  satellite.svg logo\n//                                         avatar={<Avatar size={50} src={satellite}/>}\n//                                         title={<p>{item.satname}</p>}\n//                                         description={`Launch Date: ${item.launchDate}`}\n//                                     />\n//\n//                                 </List.Item>\n//                             )}\n//                         />\n//                 }\n//             </div>\n//         );\n//     }\n// }\n//\n// export default SatelliteList;\nimport React, {Component} from 'react';\nimport { Button, Spin, List, Avatar, Checkbox } from 'antd';\n\nimport satellite from '../assets/images/satellite.svg';\n\nclass SatelliteList extends Component {\n    state = {\n        selected: []\n    }\n\n    render() {\n        const { selected } = this.state;\n        const {satInfo, isLoad} = this.props;\n        const satList = satInfo ? satInfo.above : [];\n\n        return (\n            <div className=\"sat-list-box\">\n                <Button className=\"sat-list-btn\" size=\"large\"\n                        disabled={ selected.length === 0}\n                        onClick={this.showMap} >\n                    Track on the map\n                </Button>\n                <hr/>\n                {\n                    isLoad ?\n                        <div className=\"spin-box\">\n                            <Spin tip=\"Loading...\" size=\"large\"/>\n                        </div>\n                        :\n                        <List className=\"sat-list\"\n                              itemLayout=\"horizontal\"\n                              dataSource={satList}\n                              renderItem={ item => (\n                                  <List.Item actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}>\n                                      <List.Item.Meta\n                                          avatar={<Avatar src={satellite} size=\"large\" alt=\"satellite\"/>}\n                                          title={<p>{item.satname}</p>}\n                                          description={`Launch Date: ${item.launchDate}`}\n                                      />\n                                  </List.Item>\n                              )}\n                        />\n                }\n            </div>\n        );\n    }\n\n    showMap = () => {\n        const { selected } = this.state;\n        this.props.onShowMap(selected);\n    }\n\n    onChange = e => {\n        const { dataInfo, checked } = e.target;\n        const { selected } = this.state;\n        const list = this.addOrRemove(dataInfo, checked, selected);\n        this.setState({\n            selected: list\n        })\n    }\n\n    addOrRemove = (item, status, list) => {\n        const found = list.some( entry => entry.satid === item.satid );\n\n        if(status && !found) {\n            list.push(item);\n        }\n\n        if(!status && found) {\n            list = list.filter( entry => entry.satid !== item.satid);\n        }\n\n        return list;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.satInfo !== this.props.satInfo) {\n            this.setState({selected: []})\n        }\n    }\n}\n\nexport default SatelliteList;\n"]},"metadata":{},"sourceType":"module"}